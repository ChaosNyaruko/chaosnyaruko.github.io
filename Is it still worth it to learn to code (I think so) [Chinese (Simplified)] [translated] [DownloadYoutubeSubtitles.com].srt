1
00:00:01,199 --> 00:00:05,560
最近，

2
00:00:03,199 --> 00:00:08,639


3
00:00:05,560 --> 00:00:10,559
每当发布新的 AI Advance 时，都会有人问我对软件开发未来的看法，我

4
00:00:08,639 --> 00:00:12,840
收到大量

5
00:00:10,559 --> 00:00:14,679
问题，询问

6
00:00:12,840 --> 00:00:17,480
软件开发人员的未来是什么，我认为

7
00:00:14,679 --> 00:00:21,199
他们没有问的问题是

8
00:00:17,480 --> 00:00:23,160
将来我仍然可以编码，

9
00:00:21,199 --> 00:00:26,080
显然除了c之外的所有内容

10
00:00:23,160 --> 00:00:28,840
仍然是合法的，我觉得

11
00:00:26,080 --> 00:00:31,039
他们问的真正问题是我是否

12
00:00:28,840 --> 00:00:33,000
仍然能够通过学习编码

13
00:00:31,039 --> 00:00:35,480
时所学到的技能获得报酬

14
00:00:33,000 --> 00:00:38,040
所以我想说的第一件事

15
00:00:35,480 --> 00:00:40,239
是，我讨厌预测事情，

16
00:00:38,040 --> 00:00:42,640
尤其是在公共场合，如果你在

17
00:00:40,239 --> 00:00:45,280
5 年前问我，

18
00:00:42,640 --> 00:00:46,960
我们今天是否会拥有这种人工智能技术，

19
00:00:45,280 --> 00:00:49,000
我很确定我会说不，

20
00:00:46,960 --> 00:00:52,359
我不是在谈论疯狂炒作的

21
00:00:49,000 --> 00:00:54,800
演示，而是对话式人工智能，它会

22
00:00:52,359 --> 00:00:57,920
返回某种对话的外观，

23
00:00:54,800 --> 00:00:59,440
即使它主要是幻觉我我我

24
00:00:57,920 --> 00:01:01,840
不认为我认为这是

25
00:00:59,440 --> 00:01:04,239
不可能的，所以我已经

26
00:01:01,840 --> 00:01:06,119
在

27
00:01:04,239 --> 00:01:08,360
过去的几年里，我多次更新了我对人工智能及其

28
00:01:06,119 --> 00:01:10,799
能力的认识，因此它也是未来的

29
00:01:08,360 --> 00:01:12,960
能力，所以我

30
00:01:10,799 --> 00:01:15,640
没有足够的狂妄自大来认为我知道

31
00:01:12,960 --> 00:01:17,520
未来会发生什么，我

32
00:01:15,640 --> 00:01:20,240
想我确实有 虽然

33
00:01:17,520 --> 00:01:21,880
发布这个视频来表达我的想法已经足够了，

34
00:01:20,240 --> 00:01:23,720
但我

35
00:01:21,880 --> 00:01:26,560
想谈谈两个要点，第一点是我

36
00:01:23,720 --> 00:01:28,640
认为软件不仅仅是编码，

37
00:01:26,560 --> 00:01:30,640
第二点是编程

38
00:01:28,640 --> 00:01:33,240
本身不仅仅是编码，

39
00:01:30,640 --> 00:01:35,040
在我排序之前 深入探讨那些我

40
00:01:33,240 --> 00:01:37,720
想播种的目的，

41
00:01:35,040 --> 00:01:39,759
因为人工智能将能够完成

42
00:01:37,720 --> 00:01:41,840
初级工程师

43
00:01:39,759 --> 00:01:44,479
目前面临的编码任务，人工智能将能够

44
00:01:41,840 --> 00:01:46,479


45
00:01:44,479 --> 00:01:48,880
比那些初级工程师更快、更便宜地执行这些任务，

46
00:01:46,479 --> 00:01:51,360
人工智能将能够做到这一点，并

47
00:01:48,880 --> 00:01:54,200


48
00:01:51,360 --> 00:01:56,560
在未来 5 年的某个时候向人们推出正确的产品，

49
00:01:54,200 --> 00:01:57,880
我意识到聊天中的一些人

50
00:01:56,560 --> 00:02:00,240
一直告诉我这将

51
00:01:57,880 --> 00:02:02,079
在 6 个月内完成，但推出 SC 似乎

52
00:02:00,240 --> 00:02:04,240
相当不错 当时很难改变

53
00:02:02,079 --> 00:02:05,880
一个行业的整个结构，

54
00:02:04,240 --> 00:02:08,239
但这是一个单独视频的对话，

55
00:02:05,880 --> 00:02:10,000
我这么说的原因是因为我

56
00:02:08,239 --> 00:02:13,160
不想争论我认为

57
00:02:10,000 --> 00:02:15,280
人工智能的特定能力

58
00:02:13,160 --> 00:02:18,239
将会是什么，而是我想要的

59
00:02:15,280 --> 00:02:19,720
考虑到这种情况来谈论这个问题，

60
00:02:18,239 --> 00:02:21,840
如果你认为这些观点中的任何一个都

61
00:02:19,720 --> 00:02:23,519
过于激进，有利于人工智能，

62
00:02:21,840 --> 00:02:28,000
那完全没问题，我的论点将

63
00:02:23,519 --> 00:02:30,040
在我的角落得到支持，

64
00:02:28,000 --> 00:02:31,640
我想做的另一个澄清是

65
00:02:30,040 --> 00:02:34,160
在视频的其余部分中，当我说

66
00:02:31,640 --> 00:02:36,160
编码时，我指的是

67
00:02:34,160 --> 00:02:38,200
坐在电脑前输入

68
00:02:36,160 --> 00:02:40,440
autocom 完成复制将

69
00:02:38,200 --> 00:02:42,879
编程语言粘贴到编辑器中，

70
00:02:40,440 --> 00:02:46,159
然后将其发送到产品的这种行为，从某种意义上来说，这是一种

71
00:02:42,879 --> 00:02:49,360
完全物理的行为

72
00:02:46,159 --> 00:02:52,080
因此，当我说软件

73
00:02:49,360 --> 00:02:54,840
不仅仅是编码时，我的意思是，

74
00:02:52,080 --> 00:02:56,720
人们不会为代码付费，他们

75
00:02:54,840 --> 00:02:58,640
肯定不会付费只是为了观看你的

76
00:02:56,720 --> 00:03:00,560
代码，除非你是一个 twitch 流媒体，我

77
00:02:58,640 --> 00:03:03,040
想人们会喜欢 这样做，

78
00:03:00,560 --> 00:03:05,480
但他们支付的是要

79
00:03:03,040 --> 00:03:07,840
解决的问题，当你编码时，你

80
00:03:05,480 --> 00:03:09,760
不会因为该代码而获得报酬，你会

81
00:03:07,840 --> 00:03:12,480
得到报酬来解决别人的

82
00:03:09,760 --> 00:03:14,599
实际问题或感知到的问题，这些

83
00:03:12,480 --> 00:03:16,239
问题可能是针对客户或 他们

84
00:03:14,599 --> 00:03:18,599
可能是为你的老板，甚至可能

85
00:03:16,239 --> 00:03:20,920
为其他软件开发人员，

86
00:03:18,599 --> 00:03:22,519
但你获得报酬的原因是

87
00:03:20,920 --> 00:03:24,760
因为你为某人解决的问题

88
00:03:22,519 --> 00:03:27,680
足够有价值，足以让他们

89
00:03:24,760 --> 00:03:29,360
放弃他们心爱的现金，这可以

90
00:03:27,680 --> 00:03:31,000
归结为软件 能够

91
00:03:29,360 --> 00:03:33,239
提供比以前更快、

92
00:03:31,000 --> 00:03:35,120
更便宜或更可靠的东西，

93
00:03:33,239 --> 00:03:38,200


94
00:03:35,120 --> 00:03:40,200
而软件是

95
00:03:38,200 --> 00:03:42,159
那些直接

96
00:03:40,200 --> 00:03:44,400
在计算机中输入的编码任务的超级集合，

97
00:03:42,159 --> 00:03:46,680
因为你需要的不仅仅是好的

98
00:03:44,400 --> 00:03:48,799
算法或好的类型

99
00:03:46,680 --> 00:03:50,040
为您的客户创造价值的系统并不是

100
00:03:48,799 --> 00:03:52,319
说这些不重要只是我

101
00:03:50,040 --> 00:03:54,640
说软件不仅仅是

102
00:03:52,319 --> 00:03:56,720
您需要能够理解

103
00:03:54,640 --> 00:04:00,159
需求并在情况发生变化时更新它们

104
00:03:56,720 --> 00:04:03,159
这甚至可能会犹豫是否要说

105
00:04:00,159 --> 00:04:05,200
出来 与客户或

106
00:04:03,159 --> 00:04:07,319
利益相关者交谈时，您需要能够

107
00:04:05,200 --> 00:04:09,519
练习沟通，理解向

108
00:04:07,319 --> 00:04:12,280


109
00:04:09,519 --> 00:04:14,360
您传达的非技术方面，有时在

110
00:04:12,280 --> 00:04:16,400
其他人的专业知识领域称为倾听，并且您

111
00:04:14,360 --> 00:04:18,280
还需要能够向

112
00:04:16,400 --> 00:04:21,320
非技术人员传达技术概念

113
00:04:18,280 --> 00:04:23,360
您需要能够对您专业领域内的人员

114
00:04:21,320 --> 00:04:26,000
说不

115
00:04:23,360 --> 00:04:29,160
您的项目

116
00:04:26,000 --> 00:04:31,160
无法正确完成所有事情 您需要能够对您

117
00:04:29,160 --> 00:04:33,800
想做

118
00:04:31,160 --> 00:04:35,520
但认为成本超过的事情说不

119
00:04:33,800 --> 00:04:38,680
它的价值是什么，也许用 Rust 重写你的

120
00:04:35,520 --> 00:04:41,080
前端，

121
00:04:38,680 --> 00:04:42,880
软件和制作软件有社交方面的因素，比如

122
00:04:41,080 --> 00:04:45,039
倾听反馈和提供

123
00:04:42,880 --> 00:04:46,840
建设性反馈，有指导

124
00:04:45,039 --> 00:04:48,800
和被指导，有耐心、

125
00:04:46,840 --> 00:04:51,400
善意和尊重，所有这些都

126
00:04:48,800 --> 00:04:53,520
创建了通常看起来像团队的团队。

127
00:04:51,400 --> 00:04:56,080
更有效地创建

128
00:04:53,520 --> 00:04:59,000
软件，还询问和

129
00:04:56,080 --> 00:05:02,080
理解诸如我们如何

130
00:04:59,000 --> 00:05:03,800
在这家公司赚钱之类的问题

131
00:05:02,080 --> 00:05:06,880
我曾经工作过的最好的软件开发人员

132
00:05:03,800 --> 00:05:08,880
在所有这些方面都很出色，包括编码

133
00:05:06,880 --> 00:05:11,000
他们肯定很擅长编写

134
00:05:08,880 --> 00:05:12,800
代码，但他们理解 这些技能中的每一项都

135
00:05:11,000 --> 00:05:15,880
帮助我学会更好地完成每一项，

136
00:05:12,800 --> 00:05:18,039


137
00:05:15,880 --> 00:05:19,960
只要我们有工作，所有这些技能仍然有用。

138
00:05:18,039 --> 00:05:22,199


139
00:05:19,960 --> 00:05:24,280
在作为

140
00:05:22,199 --> 00:05:26,280
软件开发人员工作或学习成为

141
00:05:24,280 --> 00:05:28,639
软件时，您可以练习和磨练这些技能。 开发人员，无论您的

142
00:05:26,280 --> 00:05:32,360
资历和 tex

143
00:05:28,639 --> 00:05:35,680
堆栈如何，但除此之外，我想说

144
00:05:32,360 --> 00:05:38,479
编程本身不仅仅是

145
00:05:35,680 --> 00:05:40,039
编码，也许本节的标题应该更符合

146
00:05:38,479 --> 00:05:44,400


147
00:05:40,039 --> 00:05:46,600
编程的主题，可以是一系列编码，

148
00:05:44,400 --> 00:05:48,960
如果我很 还原论者和我 我

149
00:05:46,600 --> 00:05:51,199
想澄清一下，非常还原论者 我看到了

150
00:05:48,960 --> 00:05:53,199
两类程序员，一类

151
00:05:51,199 --> 00:05:56,160
是解决方案复制者，一类是

152
00:05:53,199 --> 00:05:58,720
问题解决者 解决方案复制者不仅仅是

153
00:05:56,160 --> 00:06:01,319
使用复制粘贴

154
00:05:58,720 --> 00:06:05,000
解决方案而是使用复制粘贴

155
00:06:01,319 --> 00:06:07,240
解决方案来解决复制粘贴问题，而无需

156
00:06:05,000 --> 00:06:09,199
检查作为澄清，有

157
00:06:07,240 --> 00:06:11,880
很多 主要是

158
00:06:09,199 --> 00:06:14,319
复制和粘贴代码并解决

159
00:06:11,880 --> 00:06:17,639
大量问题的人，他们可能

160
00:06:14,319 --> 00:06:19,319
就像一个斗志旺盛的独立初创公司，

161
00:06:17,639 --> 00:06:21,599
他们正在复制粘贴，因为他们

162
00:06:19,319 --> 00:06:23,120
没有工程师，呃，你知道有一大群

163
00:06:21,599 --> 00:06:24,360
工程师要写一堆东西 他们

164
00:06:23,120 --> 00:06:26,599
需要大量的代码来采用

165
00:06:24,360 --> 00:06:28,560
可用的解决方案并快速交付并迭代，

166
00:06:26,599 --> 00:06:30,680
或者他们可能是一个非程序员，使用

167
00:06:28,560 --> 00:06:33,199
Excel 并复制大量的 Python 脚本来为

168
00:06:30,680 --> 00:06:34,840
一些荒谬的房地产帝国提供动力，

169
00:06:33,199 --> 00:06:36,120
我不知道重点是我

170
00:06:34,840 --> 00:06:38,440
实际上并不是在谈论

171
00:06:36,120 --> 00:06:40,360
这里的那群人，这些人仍然是

172
00:06:38,440 --> 00:06:42,039
问题解决者，他们只是专注于

173
00:06:40,360 --> 00:06:45,039
一组不同的问题和一

174
00:06:42,039 --> 00:06:47,520
组不同的解决方案，解决方案

175
00:06:45,039 --> 00:06:50,039
应对他们，他们对事情如何运作不感兴趣，

176
00:06:47,520 --> 00:06:52,639
只是将其传递给

177
00:06:50,039 --> 00:06:54,160
下一个 他们有点不知道

178
00:06:52,639 --> 00:06:55,960
不同的库、

179
00:06:54,160 --> 00:06:58,120
语言和工具可以解决他们的

180
00:06:55,960 --> 00:07:00,120
问题的方式，或者可能无法解决他们的

181
00:06:58,120 --> 00:07:02,000
问题，他们只是复制粘贴

182
00:07:00,120 --> 00:07:05,120
堆栈溢出问题中的第一个解决方案，

183
00:07:02,000 --> 00:07:07,319
或者现在可能是他们最喜欢的 llm，直到 CI

184
00:07:05,120 --> 00:07:09,599
变绿为止 没有

185
00:07:07,319 --> 00:07:11,720
考虑他们

186
00:07:09,599 --> 00:07:13,759
当前所处环境的概念，但这不仅仅

187
00:07:11,720 --> 00:07:15,960
限于

188
00:07:13,759 --> 00:07:17,199
我们一直在谈论的技术问题，可能是

189
00:07:15,960 --> 00:07:19,639
他们对

190
00:07:17,199 --> 00:07:21,440
他们的业务如何运作或如何运作不感兴趣 他们

191
00:07:19,639 --> 00:07:23,360
赚钱或者他们的客户想要什么，

192
00:07:21,440 --> 00:07:25,240
也许他们从未考虑过

193
00:07:23,360 --> 00:07:27,800
我们自己组织的结构是否可以

194
00:07:25,240 --> 00:07:30,720
帮助我们实现我们

195
00:07:27,800 --> 00:07:33,440
打算做的目标和愿望，

196
00:07:30,720 --> 00:07:35,039
相比之下，我们有问题解决者，

197
00:07:33,440 --> 00:07:37,400
这些都是好奇的人 他们试图

198
00:07:35,039 --> 00:07:39,400
通过理解来解决问题，我

199
00:07:37,400 --> 00:07:41,240
认为

200
00:07:39,400 --> 00:07:42,160
即使我们不再编写一行代码，这些技能仍然有用，

201
00:07:41,240 --> 00:07:44,560


202
00:07:42,160 --> 00:07:46,440
我认为

203
00:07:44,560 --> 00:07:49,240
人们低估了

204
00:07:46,440 --> 00:07:51,319
他们可以通过

205
00:07:49,240 --> 00:07:53,720
软件开发再次学习的技能 我的观点

206
00:07:51,319 --> 00:07:55,639
是，即使

207
00:07:53,720 --> 00:07:57,199


208
00:07:55,639 --> 00:07:59,479
你已经编写代码很

209
00:07:57,199 --> 00:08:01,520
长时间了，也有可能不学习这些，也不练习这些，例如，我认为逻辑

210
00:07:59,479 --> 00:08:03,360
iCal 思维是我们

211
00:08:01,520 --> 00:08:05,599
在做软件时可以练习的东西

212
00:08:03,360 --> 00:08:08,400
开发中，我们可以练习将

213
00:08:05,599 --> 00:08:10,759
大问题分解为更小的问题，我们可以

214
00:08:08,400 --> 00:08:12,440
致力于识别迭代并

215
00:08:10,759 --> 00:08:15,039
为客户解决问题，

216
00:08:12,440 --> 00:08:17,479
他们实际上愿意为您付费，

217
00:08:15,039 --> 00:08:19,199
可以更好地进行领域分析，正确

218
00:08:17,479 --> 00:08:21,680
理解问题集可能的

219
00:08:19,199 --> 00:08:24,440
解决方案，然后如何实施一些

220
00:08:21,680 --> 00:08:26,240
业务逻辑或流程来解决您

221
00:08:24,440 --> 00:08:28,720
可以致力于预测这些流程的边缘情况或

222
00:08:26,240 --> 00:08:31,080
故障模式您

223
00:08:28,720 --> 00:08:33,719
学习如何权衡管理并

224
00:08:31,080 --> 00:08:35,640
了解存在

225
00:08:33,719 --> 00:08:37,399
需要管理的权衡然后是

226
00:08:35,640 --> 00:08:39,440
模式识别，这对

227
00:08:37,399 --> 00:08:41,560
我们周围都很有用 因此，在我看来，这些技能中的每一项

228
00:08:39,440 --> 00:08:43,919
至少都像

229
00:08:41,560 --> 00:08:46,920
你可以训练并变得更好的肌肉，你可以

230
00:08:43,919 --> 00:08:49,240
使用软件开发作为

231
00:08:46,920 --> 00:08:50,959
进行训练的工具，只要我们有能力，所有这些

232
00:08:49,240 --> 00:08:54,040
技能都将再次有用。 与

233
00:08:50,959 --> 00:08:55,440


234
00:08:54,040 --> 00:08:56,519
我在软件部分提到的软技能做同样的工作

235
00:08:55,440 --> 00:08:59,040


236
00:08:56,519 --> 00:09:01,160
让我给你一个例子来

237
00:08:59,040 --> 00:09:03,040
说明这个两个 Neovim 的故事

238
00:09:01,160 --> 00:09:04,880
如果你愿意的话，我知道有些

239
00:09:03,040 --> 00:09:07,079
人已经会说使用

240
00:09:04,880 --> 00:09:08,480
Neovim 这只是一种浪费

241
00:09:07,079 --> 00:09:09,720
没关系，如果你不

242
00:09:08,480 --> 00:09:11,360
喜欢 neovim，那也没关系，但我想

243
00:09:09,720 --> 00:09:13,320
给出一个关于两个不同的

244
00:09:11,360 --> 00:09:15,680
人使用 neovim 的寓言，呃，这不是一个

245
00:09:13,320 --> 00:09:17,640
详尽的列表，只是两个例子，

246
00:09:15,680 --> 00:09:19,440
所以第一个人尝试 neovim 是

247
00:09:17,640 --> 00:09:21,240
因为一些原因 外部原因，

248
00:09:19,440 --> 00:09:23,120
他们急于进入

249
00:09:21,240 --> 00:09:25,880
使用 neovim 的第一步，他们不会花时间

250
00:09:23,120 --> 00:09:27,480
阅读、理解或探索

251
00:09:25,880 --> 00:09:29,560
配置中的某些问题，他们只是

252
00:09:27,480 --> 00:09:31,800
在 Reddit 上发帖，直到有人发帖或

253
00:09:29,560 --> 00:09:33,720
提出他们可能提出问题的解决方案

254
00:09:31,800 --> 00:09:35,040
没有复制步骤，我们

255
00:09:33,720 --> 00:09:37,560
在每个开发社区都见过这种人，

256
00:09:35,040 --> 00:09:39,560
你可能会认为

257
00:09:37,560 --> 00:09:41,880
这个人实际上是

258
00:09:39,560 --> 00:09:43,640
在 Neovim 上浪费时间，顺便说一句，这完全

259
00:09:41,880 --> 00:09:45,600
没问题，我们都喜欢

260
00:09:43,640 --> 00:09:47,200
以不同的方式浪费时间 我喜欢

261
00:09:45,600 --> 00:09:48,720
和我的妻子一起玩《star to Valley》，

262
00:09:47,200 --> 00:09:51,680
我们在一起浪费时间，这真的

263
00:09:48,720 --> 00:09:54,720
很好，吃豆人用户不会理解，

264
00:09:51,680 --> 00:09:56,959
但是

265
00:09:54,720 --> 00:10:00,399
通过这种 neovim 体验并没有任何学习，

266
00:09:56,959 --> 00:10:02,440
如果它代表了

267
00:10:00,399 --> 00:10:04,600
你所进行的每一次互动，那就很糟糕了 拥有

268
00:10:02,440 --> 00:10:06,800
你所在领域的顶峰技能，将

269
00:10:04,600 --> 00:10:09,440
其与

270
00:10:06,800 --> 00:10:11,040
喜欢使用 Neovim 的人进行比较，他们学会

271
00:10:09,440 --> 00:10:12,240
如何阅读文档，

272
00:10:11,040 --> 00:10:14,959
他们可能会学习一种新的编程

273
00:10:12,240 --> 00:10:16,240
语言，他们学习新的习惯用法和 api，这些习惯用法和 api

274
00:10:14,959 --> 00:10:18,160
可以

275
00:10:16,240 --> 00:10:20,240
在出现问题时教他们软件设计 在他们的

276
00:10:18,160 --> 00:10:22,399
配置中，他们学习如何阅读

277
00:10:20,240 --> 00:10:24,680
我知道在 2024 年有争议的错误消息

278
00:10:22,399 --> 00:10:26,320
他们学习调试软件

279
00:10:24,680 --> 00:10:28,320
系统 他们学习回滚

280
00:10:26,320 --> 00:10:29,920
锁定文件 他们甚至可能创建

281
00:10:28,320 --> 00:10:31,680
PR 来解决问题

282
00:10:29,920 --> 00:10:33,680
他们为自己构建解决方案并且

283
00:10:31,680 --> 00:10:35,000
能够快速 对他们进行迭代，以

284
00:10:33,680 --> 00:10:37,279
解决

285
00:10:35,000 --> 00:10:39,680
他们的现实世界问题，他们是他们自己的

286
00:10:37,279 --> 00:10:41,519
客户，

287
00:10:39,680 --> 00:10:44,399
即使他们最终得到与

288
00:10:41,519 --> 00:10:48,440
第一个人完全相同的代码，这个人也学到了很多东西，两个人都

289
00:10:44,399 --> 00:10:50,399
在 neovim 上花了很多时间，嗯，

290
00:10:48,440 --> 00:10:53,680
但第一个是解决方案

291
00:10:50,399 --> 00:10:55,959
复印机，第二个是问题解决者，

292
00:10:53,680 --> 00:10:58,160


293
00:10:55,959 --> 00:11:00,680
问题解决者的技能态度和观点

294
00:10:58,160 --> 00:11:02,680
在许多其他领域都是有帮助的，即使

295
00:11:00,680 --> 00:11:04,360
人工智能永远为他们覆盖软件

296
00:11:02,680 --> 00:11:06,720
并且他们永远不会使用

297
00:11:04,360 --> 00:11:09,240
模态文本编辑器 再次

298
00:11:06,720 --> 00:11:11,079
强调，在我给出的示例中，

299
00:11:09,240 --> 00:11:13,519
您可以用

300
00:11:11,079 --> 00:11:15,560
任何您想要的技术替换 neovim，反应拼写为

301
00:11:13,519 --> 00:11:17,600
rust hmx Excel，

302
00:11:15,560 --> 00:11:20,000
无论模式和想法是

303
00:11:17,600 --> 00:11:22,399
相同的，我的最终观点是

304
00:11:20,000 --> 00:11:24,680
您可以 选择你将如何

305
00:11:22,399 --> 00:11:27,240
解决问题以及你

306
00:11:24,680 --> 00:11:30,480
从实际解决问题中获得的收获，

307
00:11:27,240 --> 00:11:32,440
从复制 pter 转向 Giga Chad

308
00:11:30,480 --> 00:11:35,920
Problem Solver，正如我聊天中的某人所说，这

309
00:11:32,440 --> 00:11:38,440
很大程度上围绕着你决定

310
00:11:35,920 --> 00:11:41,160


311
00:11:38,440 --> 00:11:43,800
今天开始思考和提出问题 差不多就是这样，然后你

312
00:11:41,160 --> 00:11:45,920
明天、后天和后天做出同样的选择，

313
00:11:43,800 --> 00:11:49,399


314
00:11:45,920 --> 00:11:51,240
然后你就在一个实际的例子中继续这样做，

315
00:11:49,399 --> 00:11:53,120
在实际的例子中，

316
00:11:51,240 --> 00:11:55,800
你可以尝试为

317
00:11:53,120 --> 00:11:58,200
自己构建一些东西来做到这一点

318
00:11:55,800 --> 00:11:59,560
解决你遇到的实际问题

319
00:11:58,200 --> 00:12:02,040
如果其他人已经构建了

320
00:11:59,560 --> 00:12:05,160
它也没关系 重点是你要

321
00:12:02,040 --> 00:12:07,279
为自己构建它，看看你是否可以

322
00:12:05,160 --> 00:12:09,000
解决这个问题

323
00:12:07,279 --> 00:12:10,639
在为其他人制作产品时，

324
00:12:09,000 --> 00:12:12,240
特别是在你认识的人中，有些困难 大型

325
00:12:10,639 --> 00:12:14,600
企业或与许多其他

326
00:12:12,240 --> 00:12:17,040
人一起从事该项目，很难

327
00:12:14,600 --> 00:12:19,480
区分良好的反馈和

328
00:12:17,040 --> 00:12:21,240
响亮的反馈，通常会出现一些

329
00:12:19,480 --> 00:12:23,440
响亮的反馈，这些反馈似乎压倒

330
00:12:21,240 --> 00:12:25,600
并超过了您收到的所有其他反馈，所以这是一件

331
00:12:23,440 --> 00:12:27,480
好事 自己

332
00:12:25,600 --> 00:12:29,639
为自己构建一些东西

333
00:12:27,480 --> 00:12:31,959
就是你要成为那个大声而

334
00:12:29,639 --> 00:12:34,240
令人讨厌的用户，然后最终

335
00:12:31,959 --> 00:12:36,760
你会决定你是否解决了

336
00:12:34,240 --> 00:12:38,920
你的问题，如果你没有解决，那

337
00:12:36,760 --> 00:12:41,800
没关系，你可以重复我告诉我的

338
00:12:38,920 --> 00:12:43,800
三个- 一岁的儿子，失败是可以的，

339
00:12:41,800 --> 00:12:45,639
这是我们学习的一部分，

340
00:12:43,800 --> 00:12:48,040
重要的是我们利用我们的

341
00:12:45,639 --> 00:12:49,959
粗糙和坚韧再次尝试，

342
00:12:48,040 --> 00:12:53,720
你可以将其翻译成任何

343
00:12:49,959 --> 00:12:56,279
适合年龄的方式，为

344
00:12:53,720 --> 00:12:57,959
你总结我想要的

345
00:12:56,279 --> 00:13:00,000
但要明确的是，我并不是说

346
00:12:57,959 --> 00:13:02,440
解决方案复印机是坏人，或者

347
00:13:00,000 --> 00:13:04,920
我不喜欢他们，相反，我试图

348
00:13:02,440 --> 00:13:06,560
传达这样的信息：

349
00:13:04,920 --> 00:13:09,279
如果我开发的所有技能都围绕

350
00:13:06,560 --> 00:13:12,519
着反刍，我会更担心 对

351
00:13:09,279 --> 00:13:15,320
我来说，现有的解决方案似乎是一个

352
00:13:12,519 --> 00:13:18,040
更有可能通过

353
00:13:15,320 --> 00:13:20,000
人工智能以某种方式实现自动化的领域，并且

354
00:13:18,040 --> 00:13:22,560
比其他软件

355
00:13:20,000 --> 00:13:24,800
开发领域更快地实现我不喜欢

356
00:13:22,560 --> 00:13:26,600
在互联网上提供建议，主要是因为生活

357
00:13:24,800 --> 00:13:29,160
太复杂，无法

358
00:13:26,600 --> 00:13:31,000
解释 他们的情况对我来说

359
00:13:29,160 --> 00:13:33,720
太复杂了，我无法

360
00:13:31,000 --> 00:13:36,320
通过这种媒介向他们解释我的建议，

361
00:13:33,720 --> 00:13:38,839
所以我通常不会提供

362
00:13:36,320 --> 00:13:41,519
建议，但尽管

363
00:13:38,839 --> 00:13:43,800
对我来说有这样的建议，比如保持好奇心，注意

364
00:13:41,519 --> 00:13:46,040
努力工作，不要害怕 失败那些从来

365
00:13:43,800 --> 00:13:48,320
没有真正让我误入歧途，

366
00:13:46,040 --> 00:13:50,639
在我看来，再次以这种方式思考是正确的，

367
00:13:48,320 --> 00:13:52,880


368
00:13:50,639 --> 00:13:56,040
无论人工智能如何快速和彻底地

369
00:13:52,880 --> 00:13:58,240
扩展到其他软件领域，正确的给某人提供了成功的最佳机会我

370
00:13:56,040 --> 00:14:00,519
不知道未来

371
00:13:58,240 --> 00:14:03,000
会是什么样子我 我只是一个普通凡人，我

372
00:14:00,519 --> 00:14:04,560
一次把裤子放在两条腿上，但我

373
00:14:03,000 --> 00:14:06,680
确实认为，即使不考虑

374
00:14:04,560 --> 00:14:09,279
我在整个视频中提出的所有论点，

375
00:14:06,680 --> 00:14:11,360
如果你当前的假设是数

376
00:14:09,279 --> 00:14:13,800
十亿行新代码

377
00:14:11,360 --> 00:14:15,160
将会是

378
00:14:13,800 --> 00:14:17,440


379
00:14:15,160 --> 00:14:19,720


380
00:14:17,440 --> 00:14:21,680
现在看来，真正理解有关代码的一些事情，不是所有的事情，不是每种

381
00:14:19,720 --> 00:14:24,240
语言，不是每种框架，不是每种

382
00:14:21,680 --> 00:14:26,959
类型的系统，而是关于

383
00:14:24,240 --> 00:14:29,800
软件本身的一些事情，在我看来，与您可能拥有的

384
00:14:26,959 --> 00:14:31,800
任何其他可能的技能相比，这似乎是一项有益的技能。

385
00:14:29,800 --> 00:14:34,480
可能

386
00:14:31,800 --> 00:14:36,320
想要学习，特别是如果你喜欢

387
00:14:34,480 --> 00:14:38,399
学习它并且你想

388
00:14:36,320 --> 00:14:41,639
真正擅长它，我希望这可以

389
00:14:38,399 --> 00:14:45,440
鼓励你

390
00:14:41,639 --> 00:14:47,399
在你的软件中努力学习和努力工作，并且

391
00:14:45,440 --> 00:14:49,160
也有一些信心，即使

392
00:14:47,399 --> 00:14:51,399
我们永远不会得到 再次编写代码，

393
00:14:49,160 --> 00:14:53,639
我们正在学习的很多内容都非常

394
00:14:51,399 --> 00:14:54,759
有用，并可以转移到其他领域，

395
00:14:53,639 --> 00:14:56,320
让我知道您的想法，

396
00:14:54,759 --> 00:15:00,040
如果您喜欢该视频，请告诉我，谢谢大家，我

397
00:14:56,320 --> 00:15:00,040
爱你们，稍后见

